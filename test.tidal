hush

d1
  $s "uni(3, 8, [0, 3])"
  #n "[0 0 1 0]*4"
  #gain "1.3"
  #cps (130/120)

-- Prism: Light Bell
d3
  $slow 4
  $s "midi(7, 8)"
  #n "[c g]*2"
  |+|n "-19 0"
  #sustain "1.0"
  #gain "1.8"


unsolo 3

d2
  $s "distd(3, 8)"
  #gain "1.4"



d2
  $s "midi(5, 16, {0, 3, 7})"
  #n "f4"
  #cps (130/120)
    

d3
  $s "supersaw(3, 8)"
  +| note "c'maj d'min e'maj f'sus4" + note "<0 7 9 4 5>"
  *| speed "[0.5, -1.5] [0.5, -0.25]"
  -| note "24 12"
  # gain "1.0"

d1
  $s "{bd*5, sd*7}"


p 1
  $ s "bd sn" # vowel "a"
  # cps(130/120)

p "basic"
  $ s "bd"

p 1
  $ sometimesBy 0.1 (brak)
  $ sometimesBy 0.2 (rev)
  $ s "{distd*2, [~ cp]*4}"
  # gain "1.2"
  # cps (130/120)

d5
  $ sometimes (rev)
  $ s "ifdrums(3, 8)"
  # n "{0 1 2}%11"
  #gain "1.2"

p "sd"
  $ sometimes (rev)
  $ s "hc(3, 8, 3)"

p "hoge"
  $ slow 2
  $ sometimes (rev)
  $ sometimes (jux (rev))
  $ s "kon(9, 16, {0 3 5}%5)}"
  # gain 0.9
  # n (irand 2)
  -- # n "{0 1}%11"
  -- # n "{0 1 2 3 4 5 6 7}%14"
  
p "uni"
  $sometimesBy 0.3 (jux (rev))
  $sometimes (jux ((3/8) ~>))
  $slow 2
  $ s "{ifdrums(6, 16, [0, 5, 10]), uni(5, 16, 2)}"
  #n "{0 1 2 0 3}%3"

d2
  -- $sometimes (jux ((3/8) ~>))
  $ s "distd*2"
  #gain "1.2"
  #shape "0.6"

d1
  $slow 8
  $sound "empty"
  #speed "[1.0, 1.5]"
  |*|speed "[1.0, 1.002]"
  #lpf "6000"
  #resonance "0.2"
  #gain "1.0"

d3
  $slow 2
  $sometimesBy 0.5 (jux ((3/8) ~>))
  $sound "autech2(3, 8, [0, 3])"
  #gain "1.0"
  #lpf (range 400 15000 $slow 4 $sine)
  #resonance "0.2"
  #n "{0 1 2 3 4}"
  |*|speed "[1.0, -1.5]"  
  |*|speed "[1.005, 1.0]"
  #cps (130/120)
  
d2
  $slow 1
  $sometimesBy 0.2 (jux (0.25 ~>))
  $sound "orch(3, 8, [0, 2])"
  #n "2"
  #up "{c f g e g}/4"
  #lpf (scale 1000 9000 $slow 8 $sine1)
  #resonance "0.2"
  |*|speed "{0.5 -0.5, 1.0 1.5 0.5}"
  -- |*|speed "0.5 1.0"
  #delay 0.8
  #delaytime 0.02
  #delayfeedback 0.8
  #room "0.5"

d3
  $sometimesBy 0.6 (jux ((3/8) ~>))
  $sound "distd(3, 8)"
  #n "0 1 2"
  #gain "1.5"
  #delay "{0.8 0.0 0.3}"
  #delaytime "{0.015 0.02 0.01}"
  #delayfeedback "0.8"

d4
  $slow 2
  $sometimes (rev)
  -- $sometimesBy 0.2 (jux ((3/8) <~))
  $sound "kicklinn(5, 16)"
  #n "0"
  #gain "1.7"
  #shape "0.8"

d3
  $sometimes (jux (rev))
  $sound "ifdrums(5, 8, 4)"
  #n (irand 100)
  
d1 $sound "uni*2"


hush


d1 $sound "MyMoog*4" #n "c4 g5 c5 g4"

d1 $sound "MyMoog*4" #n "c3 g4 c3 f4"

cps(120/120)

d2
  $jux ((1/8) <~)
  $sometimesBy 0.4 (jux (rev))
  $sound "superzow(3, 8, [0, 3])"
  #n "[c4, f4, g4]"
  -- |+| n "<0 12 0 -5 7 4>/8"
  #sustain "{0.8 1.2 0.5 2.0}"
  |*| sustain "0.05"
  #pitch1 (range 4 32.0 $slow 12 $sine)
  -- #delay "0.3" #delaytime (13/8) #delayfeedback "0.7"
  #lpf (range 200 15000 $slow 8 $sine)
  #resonance "0.2"
  #gain "1.5"


hush  

d1
  $sometimesBy 0.1 (rev)
  $sometimesBy 0.3 (jux ((5/8) <~))
  $sound "[distd uni:1]*2"
  #gain "1.1"


hush  

d2
  $slow 2
  -- $sometimesBy 0.2 (rev)
  -- $sometimesBy 0.7 (jux (0.125 ~>))
  $sound "tictac(9, 16)"
  #n "[7 9 [6 15]*2 12]*2"
  #up (choose[0.5, 1, 1.5, 2.0, 0.25, 4.0])
  #shape "0.7"
  #gain "1.4"
  -- #delay "0.3" #delaytime (5/8) #delayfeedback "0.7"

hush

d1 $sound "[bd*2]"

hush

cps(130/120)

solo $
  
d1
  $slow 8
  -- $jux ((5/8) ~>)
  $note "0(5, 8, {0, 3, 6})"
  |+|note "{-12 0 5 12 7}%12"
  |+|note "{-12 0 -5 0}%8"
  |+|note "{0, 7, 9}"
  |+|note "0"
  -- #legato "{1 2 1 1 3}%9"
  -- |*| legato (scale 0.8 2.0 $slow 18 $sine1)
  |*| legato "3"
  #gain (scale 1.3 1.5 $slow 12 $sine1)
  -- #gain "1.0"
  #s "midi"

d2
  $ note "0*32"
  # midichan 0 # midicmd "control" # ctlNum 1 # control (scale 50 60 $slow 8 $sine1)
  #s "midi"  

d4
  -- $sometimesBy 0.5 (jux (iter 8))
  $sound "[uni hc]*2"
  #gain "1.3"

d1
  $sound "kon(5, 8)"
  #n (irand 10)
  #gain "1.0"

d3
  $ note "0*32"
  # midichan 0 # midicmd "control" # ctlNum 0 # control (scale 40 120 $slow 24 $sine1)
  #s "midi"

d4
  $ note "0*32"
  # midichan 0 # midicmd "control" # ctlNum 1 # control (scale 10 40 $slow 8 $sine1)
  #s "midi"  

d3
  $sometimesBy 0.4 (0.125 ~>)
  $sound "autech1*4"
  #n "{0 1 3 0 1 3 2}%3"
  #speed (scale 1.0 1.01 $rand)
  #pan (rand)
  #gain "1.3"
  #shape "0.5"

d2
  $sometimesBy 0.3 (0.25 ~>)
  $sound "autech2*2"
  #n (irand 10)
  #speed (scale 1.0 1.01 $rand)
  #up "{0}"
  #pan (rand)
  #gain "1.3"

  -- #shape "0.3"  

d4
  $sometimesBy 0.6 (0.125 <~)
  $sound "aphex(3, 8)"
  #gain "1.5"
  #pan (range 0.3 0.7 $rand)
  #n "{0 1 0 2 3 0}%3"

d3
  $sometimesBy 0.6 (0.125 ~>)
  $sound "gabkick(3, 8, {2, 4, 6})"
  #n "-7 5"
  #sustain "0.1"
  #lpf (scale 800 1000 $slow 8 $sine1)
  #resonance "0.0"
  #gain "1.0"

d2
  $sound "[uni hc]*2"
  #gain "1.5"

d3
  $slow 6
  $sound "bmoog(3, 8, {0, 3})"
  #legato (choose [3, 6])
  #n "{0 4 5 9}%9"
  |+| n "{-12, 0}"
  |+| n "-19 -12"
  #gain "0.8"
  #room "0.7" #size "0.6"
  #pitch1 0.8
  #speed (scale 0.2 0.7 $rand)
  #lpf 1000
  #orbit "1"

let
  pat1 = "{1 0 0 1 0 1 1 0 1 0 1 1 0 0}%8"
  pat2 = "{1 0 0 1/2 0 0 1 0 0 0}%8"
  inv 1 = 0
  inv 0 = 1
    
d3
  $gain pat2 #sound "alihc"
  #n "3 3 3 6"
  |*|gain "1.5"

d2
  $gain (inv <$> pat2) #sound "ppperc"
  #n "2 2 2 1"
  |*|gain "1.5"
  
d4
  $sound "jimsyn(3, 8)"
  #n "<1 20>"
  #up "[-7, 5]"
  -- |*| speed "[1.0, 1.5]"
  |*| gain "1.1"
  #lpf (scale 2000 8000 $slow 16 $sine1)
  #resonance "0.1"
  -- #room "0.4" #size "0.9"

d4
  $every 2 (jux (iter 4))
  $every 4 ((5/8) <~)
  $sound "[uni uni:1]*2"
  |*| gain "1.4"

d1
  $sound "jimsyn*2"
  #n "{7, 14}"
  #up "{-2 7}%8"
  -- |/| speed "{1.0, 1.5}"
  #lpf (scale 400 12000 $slow 16 $sine1)
  #resonance "0.2"
  #pan (rand)
  #gain "1.1"

d3
  $sound "ifdrums(3, 8, {0, 3})"
  #n "0 1 2 3"
  #gain "1.4"  

d4
  $every 5 ((3/8) ~>)
  $every 2 (rev)
  $sound "ppbass(5, 8)"
  #n "6"
  #up (choose [0, 3, 9, 11, 15])
  -- |*|speed (choose [1, 1.5, 0.75])
  #lpf (scale 200 800 $slow 16 $sine1)
  #resonance "0.35"
  |*|gain "1.5"

hush  


do
  let
    pat1 = "{1 0 0 1 0 1 1 0 1 0 1 1 0 0}%8"
    pat2 = "{1 0 0 1/2 0 0 1 0 0 0}%8"
    inv 1 = 0
    inv 0 = 1



  d6
    $jux (iter 4)
    $every 3 ((5/8) <~)
    $every 4 ((3/8) ~>)
    $gain(inv <$> pat1) #sound "ppcp"
    #n (irand 100)    

d6
  $gain pat1 #sound "ppbass"
  #n "9"
  #up "{5 7}%6"
  #lpf (scale 200 1000 $rand)
  #resonance "0.1"  

do
  let
    pat1 = "{1 0 0 1 0 1 1 0 1 0 1 1 0 0}%8"
    pat2 = "{1 0 0 1/2 0 0 1 0 0}%8"
    inv 1 = 0
    inv 0 = 1
  d1
    $gain pat1 #sound "ppbass"
    #n 6
    #up "{5 7}%6"
    #lpf (scale 200 1000 $rand)
    #resonance "0.1"
  d2
    $gain pat2 #sound "ppbd"
    #n 6
    |*| gain "1.0"
  d3
    $jux (iter 4)
    $every 3 ((5/8) <~)
    $every 4 ((3/8) ~>)
    $gain(inv <$> pat1) #sound "ppperc"
    #n (irand 100)

do
  let
    pat1 = "{1 0 0 1 0 1 1 0 1 0 1 1 0 0}%8"
    pat2 = "{1 0 0 1/2 0 0 1 0 0}%8"
    inv 1 = 0
    inv 0 = 1
  d1
    $jux (rev)
    -- $jux (iter 4)
    $gain pat1 #sound "ppbass"
    #n "1 18"
    #up "{[0, 5] [2, 7]}%2"
    |/| speed 1.0
    #lpf (scale 100 8000 $rand)
    #resonance "0.1"
  d2
    $gain pat2 #sound "dpbd"
    #n 3
    |*| gain "1.0"
  d3
    $jux (iter 4)
    $every 3 ((5/8) <~)
    $every 4 ((3/8) ~>)
    $gain(inv <$> pat1) #sound "dphc"
    #n (irand 100)
  d4
    $sound "uni*2"
    |*| gain "1.2"

hush

hush

import Sound.Tidal.MIDI.Context

displayOutputDevices >>= putStrLn

devices <- midiDevices

m1 <- midiStream devices "LoopBe Internal MIDI" 15 synthController

m1 silence

cps(120/120)

do
  let
    pat = "{1 0 0 1 1 0 0 1 1 0 0}%8"
    inv 1 = 0
    inv 0 = 1
  d2
    -- $jux (iter 8)
    -- $every 3 (0.125 ~>)
    $ gain pat
    # s "superzow"
    |+| n "{-12, -19}"
    |+| n "{0 7 12 24}%7"
    |+| n "[0, <4 5 7>/4, {0 5 7 9 0 7}%8]"
    # legato "{1.5 0.5 1.0 0.8}%8"
    # lpf (scale 400 4000 $slow 8 $sine1)
    # resonance (scale 0.0 0.2 $slow 14 $sine1)
    # detune "0.5"
    -- # delay "0.5" # delaytime (11/8) # delayfeedback "0.25"
    -- # room "0.8"
    # gain "0.9"

d2 silence

hush

d5
  $slow 1
  $sometimesBy 0.2 (jux (0.125 ~>))
  $s "bfm({3, 5}, 8, {0, 3, 6})"
  #n (choose [0, 3, 9, 11])
  #voice ((irand 4000) + 2000)
  #pitch1 "1.1"
  |+| n "{-7, 0, 12}"
  |+| n "{-9, -12}"
  #sustain (scale 0.01 0.3 $rand)

hush  

m1
  $ n "0(3, 8, {0, 3, 9})"
  |+| n "{-12 0 6 11}%5"
  |+| n "0"
  -- |+| n "<0 5 3 7>/8"
  # dur (1/6)
  # velocity (scale 0.2 0.9 $rand)

d1 silence

d1
  $sound "{uni*2, hc*8}"
  #gain "1.2"

do 
  d2
    $every 3 (0.125 ~>)
    $sound "[uni uni:1]*2"
    #gain "1.4"
  d3
    $every 2 (0.25 ~>)
    $sound "ifdrums(3, 8, 3)"
    #n (irand 10)
    #gain "1.3"
  d4
    $every 5 (0.25 <~)
    $sound "mrdk18(3, 8, {0, 4})"
    #n (run 120)
    #gain "1.3"

hush

cps(130/120)

d2 silence

hush

do
  let
    pat = "{1 0 0 1 1 0 0 1 0 1 0 0}%8"
    inv 1 = 0
    inv 0 = 1
  d1
    -- $every 3 (jux ((1.0/8.0) <~))
    $every 3 ((5.0/8.0) ~>)
    $every 5 ((3.0/8.0) <~)
    $stack[
      gain pat # sound "ifdrums" #n "0 2"
      , gain (inv <$>pat) # sound "mrdk2" #n (irand 80)
      , sound "[mrdk15:7 mrdk15:4]*2" #gain "1.0"
    ]
    -- #shape "0.6"
    |*| gain "1.5"
    #delay "0.3" #delaytime (13/8)
    #pan (rand)
    -- #hpf 1000
    -- #delay "0.8" #delaytime "{0.01 0.03 0.02}%8" #delayfeedback "0.5"

d2 silence    

do 
  let chord1 = "{c5, g5, a5}"
  d2
    $slow 2
    $stack
    [
      sound "supersaw(3,16,{0,8})" # n chord1 |+|n "12",
      sound "supersaw(3,16,{2,5})" # n chord1 |+|n "7",
      sound "supersaw(3,16,{0,3})" # n chord1 |+|n "0"
    ]
    |+|n "{-7, -12, 7}"
    |+|n "3"
    #sustain "0.2 0.08 0.2 0.02 0.1"
    #gain "0.8"
    #lpf (scale 800 18000 $slow 16 $sine1)
    #resonance "0.3"    

-- 03

d2
  -- $every 4 (jux (0.125 <~))
  $stack
  [
    -- s "uni(5, 8)" #n "{0 1 2}X%8",
    s "distd(3, 8)" |*|gain "1.3",
    s "[~ uni:1]*2"
  ]
  #shape "0.2"
  
d4
  $iter 4
  $stack
  [
    s "super808(5, 8, {0, 3})" #n (irand 7)
  ]
  #pan (rand)
    
-- 04

do 
  let chord1 = "{c5, g5, f5}"
  d2
    $slow 2
    $stack
    [
      sound "supersaw(3,16,{0,8})" # n chord1 |+|n "12", 
      sound "supersaw(3,16,{2,5})" # n chord1 |+|n "7",
      sound "supersaw(3,16,{0,3})" # n chord1 |+|n "0"
    ]
    #sustain "0.08 0.2 0.05 "
    #gain "0.9"
    #lpf (scale 800 8000 $slow 16 $sine1)
    #resonance "0.2"

-- 05

d4
  $every 2 (#gain "0")
  $sound "ifdrums*2 ~"
  #n "[0 2] 0"
  #gain "1.5"
  
d4
  $sometimesBy 0.3 (0.125 ~>)
  $stack
  [
    -- s "glitch(2, 8, 1)" #n (irand 16),
    -- s "dr55(2, 8, 3)" #n (irand 16),
    -- s "bass(2, 8, 2)",
    s "mrdk15(3, 8, 3)" #n "{0 1 2 3 4 5 6}%9", 
    s "mrdk1(3, 8, 0)" #n "{1 2 1 2 3}%9", 
    s "bd:0*2" |*|gain "1.5"
  ]
  #gain "1.5"




hush




import Sound.Tidal.TidalToMax

hush

cps(120/120)

d1
  -- パターンを変形される関数群
  $ whenmod 16 15 (rev)
  $ sometimesBy 0.4 (jux (0.125 ~>))
  $ sometimesBy 0.1 (1.25 <~)
  -- stackに格納されたパターンの集合
  $ stack [
    --gain pat # sound "bass:2",
    --gain (inverse <$> pat) # sound "cp" #n (irand 20),
    sound "ifdrums(5, 8)" #n "{0 1 2 3}%8",
    sound "~ [cp hc] ~ glitch",
    sound "bd:3*2" #gain "1.4"
  ]
  -- エフェクト関連
  #lpf (scale 800 18000 $slow 16 $sine1)
  #resonance 0.2
  #delay "0.5" #delaytime (choose [1/2, 1/4]) #delayfeedback "0.5"
  #room "0.2" #size "0.7"
  #shape "0.5"
d2
  $sound "superzow(3, 8, {0, 3})" 
  #n ("{0, <4 5>/4, <7 9>/8}" - "{19, 12, 5, 0}" + "<0 4 7 9>/16")
  #sustain "{0.3 0.05}%8"
  #gain "0.8"

hush
  
do
  let
    pat = "{1 0/2 1 0 1 0 1/2 1 0 0 1/3}%8"
    inverse 1 = 0
    inverse 0 = 1
  d1
    -- $ jux (iter 8)
    $ sometimesBy 0.4 (jux (0.125 ~>))
    $ sometimesBy 0.1 (1.25 <~)
    $ stack [
      sound "bd:3*2" #gain "1.7",
      sound "ifdrums(5, 8)" #n "{0 1 2 3}%8",
      sound "~ [cp hc] ~ bass",
      gain pat # sound "glitch" #n (irand 20),
      gain (inverse <$> pat) # sound "super808" #n (irand 12),
      sound "superzow(3, 8, {0, 3})"
        #n ("{0, <4 5>/4, <7 9>/8}" - "{19, 12, 5, 0}" + "<0 4 7 9>/16")
        #sustain "{0.2 0.05}%8"
        #gain "0.8"        
    ]
    #lpf (scale 800 18000 $slow 16 $sine1)
    #resonance 0.2
    -- #delay "0.8" #delaytime (choose [0.01, 0.02, 0.04, 0.08]) #delayfeedback "0.8"
    -- #delay "0.5" #delaytime (choose [1/2, 1/4]) #delayfeedback "0.5"
    #room "0.2" #size "0.7"
    #shape "0.5"  

d1
  -- パターンを変形する関数群
  -- $ whenmod 16 15 (rev)
  -- $ sometimesBy 0.4 (jux (0.125 ~>))
  -- $ sometimesBy 0.1 (1.25 <~)
  -- 複数のパターンをリストに格納したstack
  $ stack [
    -- sound "bd:3*2" #gain "1.7",
    -- sound "ifdrums(5, 8)" #n "{0 1 2 3}%8",
    sound "~ [cp hc] ~ bass",
    gain pat # sound "glitch" #n (irand 20),
    gain (inverse <$> pat) # sound "super808" #n (irand 12),
    sound "superzow(3, 8, {0, 3})"
      #n ("{0, <4 5>/4, <7 9>/8}" - "{19, 12, 5, 0}" + "<0 4 7 9>/16")
      #sustain "{0.2 0.05}%8"
      #gain "0.8"        
  ]
  -- エフェクト関連
  #lpf (scale 800 18000 $slow 16 $sine1)
  #resonance 0.2
  #delay "0.5" #delaytime (choose [1/2, 1/4]) #delayfeedback "0.5"
  #room "0.2" #size "0.7"
  #shape "0.5"    

do
  let
    inverse 1 = 0
    inverse 0 = 1
    pat = "{1 0/2 1 0 1 0 1/4 1 0 0 1/3}%8"
  d1
    $ whenmod 16 15 (rev)
    $ sometimesBy 0.4 (jux (0.125 ~>))
    $ sometimesBy 0.1 (1.25 <~)
    $ stack [
      sound "bd:3*2" #gain "1.5",
      sound "ifdrums(5, 8)" #n "{0 1 2 3}%8",
      sound "~ [cp hc] ~ bass",
      gain pat # sound "glitch" #n (irand 20),
      gain (inverse <$> pat) # sound "super808" #n (irand 12)
    ]
    #delay "0.5" #delaytime (choose [1/2, 1/4]) #delayfeedback "0.25"    
    #shape "0.5"
  d2
    $ every 3 (jux (iter 4))
    $ sometimesBy 0.1 (rev)
    $sound "superzow(3, 8, {0, 3})"
    #lpf (scale 800 18000 $slow 16 $sine1)
    #resonance 0.3
    #n ("{0, <4 5>/4, <7 9>/8}" - "{19, 12, 5, 0}" + "<-7 0 4 7 9>/16")
    #sustain "{0.3 0.05}%8"
    #gain "0.8"
    #room "0.2" #size "0.7"

d1 
  $gain "1 0 1 0 1 1 0 0"
  # sound "bd" 

hush

d1 
  $ cat [
    sound "ifdrums(5, 8)" #n "{0 1 2 3}%8",
    sound "bd*2 [cp hc] ~ glitch",
    sound "[~ casio*2] [~ hc*4]"

    ]

cps 1

do
  let
    inverse 1 = 0
    inverse 0 = 1
    pat = "{1 0/2 1 0 1 0 1/2 1 0 0 1/3}%8"
  d1
    $ whenmod 16 15 (rev)
    $ sometimesBy 0.4 (jux (0.125 ~>))
    $ sometimesBy 0.1 (1.25 <~)
    $ stack [
      gain pat # sound "bass:2",
      gain (inverse <$> pat) # sound "cp" #n (irand 20),
      sound "ifdrums(5, 8)" #n "{0 1 2 3}%8",
      sound "~ [cp hc] ~ glitch",
      sound "bd:3*2" #gain "1.4",
      sound "superzow(3, 8, {0, 3})" 
        #n ("{0, <4 5>/4, <7 9>/8}" - "{19, 12, 5, 0}" + "<0 4 7 9>/16")
        #sustain "{0.3 0.05}%8"
        #gain "0.8"        
    ]
    #lpf (scale 800 18000 $slow 16 $sine1)
    #resonance 0.2
    #delay "0.5" #delaytime (choose [1/2, 1/4]) #delayfeedback "0.5"
    #room "0.2" #size "0.7"
    #shape "0.5"

  

cps(130/120)

do  
  let
    inverse 1 = 0
    inverse 0 = 1
    pat1 = "{1 0/2 1 0 1 0 1/2 1 0 0 1/3}%8"
  d1
    $sometimesBy 0.3 (jux (0.125 ~>))
    $whenmod 4 3 (0.25 ~>)
    $gain pat1 # sound "{bass:2, uni}"   
  d2 
    $sometimesBy 0.2 (jux (0.5 <~))
    $whenmod 3 2 (0.25 <~)
    $gain (inverse <$> pat1) # sound "{fell, alva}"
    #delay "0.6"
    #delaytime "{0.01 0.03 0.02}%8"
    #delayfeedback "0.8"  
  d3
    $sound "ifdrums(3, 8)"
    #shape "0.5"

do
  let 
    pat1 = "{1 0 1 0 1 1 0 0}%8"
    pat2 = "{~ 0 ~ 0 0*2 ~ 0*2 ~ 0 ~ ~ 0 ~}%8"
  d1
    $gain pat1 # sound "bd"

do
  let 
    pat1 = "{0 ~ 0*3 ~ 0 0*2 ~ ~ 0 ~ 0}%8"
    pat2 = "{~ 0 ~ 0 0*2 ~ 0*2 ~ 0 ~ ~ 0 ~}%8"
  d1
    $sometimesBy 0.3 (jux (0.25 <~))
    $up pat1
    # sound "{uni}"
    # n (irand 10)
    # gain "1.2"
    # shape "0.1"
    |+|note (choose [0, -7, -12])
  d2
    $whenmod 8 4 (jux (iter 8))
    $up pat2
    # sound "{fell}"
    # n "{0 1 2 3 4 5 6 7 8 9}%5"
    # gain "1.2"
    #shape 0.7

d3
  $sound "uni(3, 8, {0, 3, 6})"
  #gain "1.1"
  #note "7 0 5 -7"
  #shape 0.5


do
  let
    pat1 = "{7 ~ ~ ~ 0 ~ 0 ~ ~ 0 ~}%8"
    pat2 = "{0 ~ ~ 0*3 ~ 0 7 ~ 0*2 ~ -5 ~}%8"
  d1
    $iter 4
    $sometimesBy 0.5 (0.125 ~>)
    $up pat1 |=| sound "[ifdrums, uni]"
    #n (irand 10)
    #gain "1.5"
    #shape "0.4"
  d2
    $jux (iter 8)
    $up pat2 |=| sound "supersaw"
    # sustain (choose [0.04, 0.05, 0.1, 0.2])
    # pan (choose [0.5, 0.2, 0.8])
    # delay "0.5"
    # n (choose [0, 4, 5, 7, 9])
    |+| n "{0, -5, -12, 7}"
    # lpf (scale 100 1200 $slow 8 $sine1)
    # resonance "0.4"



d1
  $sound "bd*16"

hush  


d1 $iter 8 $sound "bd cp bass hc"

d1 $jux (0.25 <~) $sound "bd*2 [cp*2 hc*3]"

d1 $jux (rev) $sound "bd*2 [cp*2 hc*3]"

d1 $jux (iter 8) $sound "bd*2 [cp*2 hc*3]"

d1 $jux (slow 1.5) $sound "bd*2 [cp*2 hc*3]"

d1
  $sound "bd*2 [cp*2 hc*3]"
  #gain "1.5 [1.0 0.8]"
  #pan "0.5 [0.1 0.9]"
  #delay "0.5"
  #delaytime "0.125 0.01"
  #delayfeedback "0.7"
  #lpf "800 8000 800 15000"
  #resonance "0.1 0.3 0.2 0.4"
  #shape "0.7"
  #vowel "u a i e"

hush

d1
  $jux ((choose[0.125, 0.25, 0.5]) <~)
  $sound "[bd(3, 8), cp(3, 8, 3), tabla2(5, 8, 4)]"
  #pan (rand)
  #n (irand 12)
  #up (choose [0, 4, 5, 7])
  #lpf (scale 100 12000 $rand)
  #resonance (choose [0.1, 0.1, 0.1, 0.3])
  #delay "0.5"
  #delaytime (choose[0.0625, 0.125, 0.25, 0.5])









  d1
  $sound "bd*2 [cp*2 hc*3]"
  #gain 1.5

d1
  $sometimesBy 0.2 (rev)
  $whenmod 8 6 (slow 2)
  $every 4 (0.125 <~)
  $often (jux (rev))
  $often (brak)
  $sound "[glitch(5, 8), kon*4, bd*3, tabla(6, 10)]" #n (irand 100)

d1 $sound "supersaw supersaw supersaw supersaw" #sustain "0.1"

d1 $sound "supersaw supersaw supersaw supersaw" #sustain "0.1" #n "0 1 2 3"

d1 $ sound "{bd bd, arpy cp*2 hc ~ hc}"

d1
  $sometimesBy 0.2 (rev)
  $whenmod 8 6 (slow 2)
  $every 4 (0.125 <~)
  $often (jux (rev))
  $often (brak)
  $sound "[{bd cp*2, bass glitch hc arpy ~}, uni*4, fell2(3, 8)]"
  #n "{0 1 2 3 4 5}/4"

d1 $ sound "{bd cp*2, hc*5}"

d1 $ sound "{bd*5, hc*3}"

d1 $ sound "superhammond*4" #sustain "0.1" #n "0 1 2 3" 

d1 $every 4 (0.25 ~>) $sound "bd*2 [cp*2 hc*3]"

d1 $sometimesBy 0.25 (fast 2) $sound "bd*2 [cp*2 hc*3]"

d1 $whenmod 8 6 (fast 2) $sound "bd*2 [cp*2 hc*3]"

d1 $whenmod 5 2 (slow 2) $sound "bd*2 [cp*2 hc*3]"

d1 $sometimesBy 0.2 (rev) $sound "bd*2 [cp*2 hc*3]"

d1 $ sound "[bd*3, hc*5, [~ cp]*2]"

d1 $ sound "bd ~ ~ cp"

d1 $ sound "[bd*2, cp hc cp hc*2]"

d1 $ sound "[bd*3, hc*5, [~ cp]*2]"

d1
  $sound "[bd [hc [cp cp]] [~ bd] hc] [bd [~ cp]]"

d1 $ sound "bd cp bd cp"

d2 $ sound "hc hc hc hc hc"

d3 $ sound "arpy arpy arpy"

hush

cps(130/120)

hush

do
  let
    pat1 = "{0*2 ~ 0 0*2 ~ 0 0 ~ 0 0}%4"
    pat2 = "{0 ~ 0*2 ~ 0 ~ 0 0 ~ 0 0}%4"
    pat3 = "{0 ~ 0 0 0*2 0 ~ 0*2 0 0}%4"
  d1
    $sometimesBy 0.4 (0.25 <~)
    $up pat1
    |=|s "skick"
    #sustain "0.25"
    #voice "4"
    #gain "1.5"
  d2
    $sometimesBy 0.2 (rev)
    $jux (0.25 ~>)
    $up pat2
    |=|s "uni:1"
    #gain "1.0"
    -- #delay "0.8" #delaytime "{0.01 0.02 0.008 0.02}%8" #delayfeedback "0.8"
  d5
    $up pat3
    |=|s "bfm"
    #sustain "0.3"
    |+|n "c3"
    #pitch1 (choose [1.3, 3.33, 1.7, 2.7])
    #voice (scale 100 2000 $slow 16 $rand)
    #lpf (choose [200, 400, 600, 800, 2000])
    #resonance "0.2"
    #gain "0.8"
    


d3
  $s "basicFM"
  #pitch1 (scale 0.1 0.3 $rand)
  #voice (scale 100 2000 $rand)
  #n "-12"
  #sustain "0.5"

d1
  -- $jux (0.125 ~>)
  -- $sometimesBy 0.2 (0.125 ~>)
  $s "eh(3, 8, {3, 6})"
  #n "{0 1 0 2 0 3}%4"



d2
  $slow 2
  $s "basicFM"
  -- #n "{0, 7}"
  -- |+|n "{0 7 5 -5}%3"
  #sustain "3"
  #pitch1 (scale 0.1 0.5 $rand)
  #voice (scale 1 4 $slow 24 $rand)
--  #lpf (scale 100 12000 $slow 32 $sine1)
--  #resonance "0.2"
  #shape "0.5"





d2 $s "hc*2"

d1 $s "revbd/4"
#gain "1.5"

d2 $s "gabba(5, 8, {2, 4})"
#n (irand 12)

d3 $s "glitch(3, 8, {0, 3})"
#n (irand 12)

d4
$every 2 (jux (rev))
$every 3 (0.25 ~>)
-- $every 2 (0.125 <~)
-- $iter 4
$s "myblip(3, 8, {2, 4})" #n "{0}"
|+| n "{0 -7 0 0 -5 0}%4"
#sustain "0.1 0.3 0.04"
#cutoff (scale 100 8000 $slow 8 $rand)
#resonance "0.3"
-- #delay "0.9" #delaytime "0.1255" #delayfeedback "0.5"
#delay "0.5" #delaytime "0.01 0.02 0.03" #delayfeedback "0.9"
-- #room "0.4"
-- #shape "0.4"

hush

d1
$every 3 (0.125 ~>)
$jux (iter 4)
$iter 8
$ stack[
 s "test808*8" # sustain "0.5" # pan "1 0.5 0" # gain "1 0.5 0.75 0 1",
 s "testsynth*8" # sustain "0.25" # pan "0 0.7 0.3 0.5 1" # note (run 36) # gain "1 0.5 0.8 1"
]

d1
$every 3 (0.125 ~>)
$every 2 (jux (iter 4))
$sometimes (rev)
$ stack[
 s "test808(3, 8, {2, 5, 7})" # sustain "0.5"
 # pan "1 0.5 0" # gain "1 0.5 0.75 0 1",
 s "testsynth(5, 8, {0,3})" # sustain "0.25"
 # pan "0 0.7 0.3 0.5 1" # note "12 20 37" # gain "1 0.5 0.8 1"
]
#delay "0.8" #delaytime "0.01 0.02 0.03" #delayfeedback "0.8"

d1
$jux (iter 4)
$every 3 (0.125 ~>)
$s "testsynth*8" #n (run 12)
#gain "0.8"
#sustain "0.04 0.15"

d2 $ s "test808*8" 
# sustain "0.5" # pan "1 0.5 0" # gain "1 0.5 0.75 0 1"

d2 $ s "test808(5, 8, {0 3 6})" 
# sustain "0.5" # pan "1 0.5 0" # gain "{1 0.5 0.75}%8"

d1 $s "testsynth*8"

hush

d2 $
  sound "{bd, super808*8}" #n (irand 16) #gain "1.2"

--

d1 $density 4 $ superimpose (fast 1.0001) $up "<0 5 12> <2 9>" # sound "arpy"

-- solo $
d1
  $sometimes (rev)
  $sometimesBy 0.3 (jux (rev))
  $stack[
  --s "numbers(3, 7, 3)" #n (irand 30),
  --s "sitar*2" #gain "1.2" #n (irand 30),
  s "tabla2(3, 7, {5,2})" #gain "1.0" #n (irand 30),
  --s "tabla(3, 7, 2)" #gain "1.3" #n (irand 30),
 --  s "alphabet(3, 7)" #n (irand 30) #speed (scale 1.0 1.5 $rand),
  s "kon(5, 7, {0,4})" #n (irand 20) #gain "1.1",
  s "cp(2,7,5)" #gain "1.0",
  s "bd" #gain "1.7"
]
-- #delay "0.6" #delaytime "{0.015 0.03 0.02}%4" #delayfeedback "0.8"

d2
$stack[
  s "ifdrums(4, 7, {0})"  #n "{0 1 2 3}%5"
]
#gain "1.5" #shape "0.6"

d3
$sometimesBy 0.5 (jux (rev))
$sometimesBy 0.5 (jux (iter 7))
$stack[
  s "supersaw(3, 7, 6)" #n "[0, 4, 7, 9, 11]" |+| n "5",
  s "supersaw(3, 7, 4)" #n "[0, 4, 7, 9, 11]" |+| n "-12",
  s "supersaw(3, 7, 2)" #n "[0, 4, 7, 9, 11]" |+| n "7",
  s "supersaw(3, 7, 0)" #n "[0, 4, 7, 9, 11]" |+| n "0"
]
|+|n "<-7 0 7 0 5 0 -5>/8"
#cutoff (scale 800 10000 $slow 8 $sine1) #resonance "0.2"
#sustain "{0.12 0.01 0.1}%3"
-- #sustain "0.12"

d4
$sometimes (rev) $sound "{bd, ifdrums(3, 7, 3), hc(3, 7, 2), glitch(3, 7)}" #shape "0.6" #n (irand 8) #gain "1.5" #shape "0.4"


d1 $ 
sometimes (rev) $every 2 (iter 4) $sound "{bd*4, ifdrums(3, 8, 3), hc(3, 8, 2), glitch(3, 8)}" #shape "0.6" #n (irand 8) #gain "1.5"
#delay "0.9" #delaytime "{0.01 0.03 0.02}%4" #delayfeedback "0.8"

d2 $
s "supersquare(5, 7, {0, 5})" #n "[0, 4, 7, 9, 11, 16]" |+| n "{0, -5, 12}"
|+|n "<-7 7 0 5 -5 12 -12>/8"
#cutoff (scale 800 20000 $slow 4 $sine1) #resonance "0.3"
#sustain "{0.01 0.2 0.1}%8"
#pan (rand)
-- #room "0.8"


  #gain "0.6"


d1
$sometimes (jux rev)
$stack [
  s "ifdrums(3, 8, 0)" #n (irand 3),
  s "bass(2, 8, 2)",
  s "bd:0*2" #shape "0.2"
]
#gain "1.75"


d1 $sound "testsynth" #n ((irand 48) - 24)

d1 $sound "super808(3, 8)"

d1 $ s "super808*7"
# sustain "0.5" # pan "1 0.5 0" # gain "1 0.5 0.75 0 1"

d1 $ s "super808(5, 7, {0, 3, 6})"
# sustain "0.5" # pan "1 0.5 0" # gain "{1 0.5 0.75}%8"

d1
$every 2 (jux (iter 4))
$sometimes (rev)
$ stack[
  s "super808(3, 8, {2, 5, 7})" # sustain "0.5" # pan "1 0.5 0" # gain "1 0.5 0.75 0 1",
  s "testsynth(5, 8, {0,3})" # sustain "0.25" # pan "0 0.7 0.3 0.5 1" # note "12 20 37" # gain "1 0.5 0.8 1"
]
#delay "0.8" #delaytime "0.01 0.02 0.03" #delayfeedback "0.8"

d1
$ stack[
  s "super808*8" # sustain "0.5" # pan "1 0.5 0" # gain "1 0.5 0.75 0 1",
  s "testsynth*8" # sustain "0.05" # pan "0 0.7 0.3 0.5 1" # note "52 40 47" # gain "1 0.5 0.8 1"
]

d1 $sound "[[bd cp hc ifdrums gabba], [bd cp] * 3]"

d1 $sound "bd hc bd cp"

d1 $ sound "[bd*32 hh*24] bd"

d1 $ sound "cp*16"

d1 $ sound "hc(7,32,10)"

d1 $ sound "hc(3,8,5)"

d1 $ sound "ifdrums(3,8,2)" #n "1 2 0 4 7"

d1 $ sound "[bd cp, bd cp hc]"

d1 $ sound "{bd cp hc}%8"

d2 $ sound "{bd cp hc bass}%8"

d1
$ jux (iter 2)
$ sound "[{bass glitch 808bd hc hh}%8, cp hc]"
-- # n (irand 30)
-- # delay "0.5" #delaytime "{0.1 0.01 0.03 0.5}%8" #delayfeedback "0.5"
-- # speed "{1.0 1.0 2.0 0.5 1.5}%8"
# shape "0.7"
# pan rand

hush

d2 $ sound "[~ ~ ~ cp]*2"

d2 $ sound "~ cp ~ ~ ~ cp ~ cp"

d1 $ sound "[~ bass]*2 [sn cp]"

d1 $ sound "bd*3"

d2 $ sound "hc cp cp cp cp"

d4 silence

d1
$jux (iter 8)
$sometimesBy 0.4 (rev)
$stack[
 sound "hc(5, 8)",
 sound "ifdrums(5, 8, 3)",
 sound "~ hh bass bass"
]
#n "0 1 2 3 4 5"
#pan (rand)

d1 $ brak $ sound "bd sn"

d2
$ jux (iter 8)
$ stack[
   sound "cp(3,8,3)",
   sound "909*4 [~ 909:1]*2",
   sound "[~ hh] hc(2,8)",
   sound "bass(3, 8)"|+| vowel "u i e o w"
]

d1
$jux(iter 2)
$jux(iter 8)
$stack[
  -- sound "bass(5, 16)" #n "0 2 1 3 5 3 2 1",
  sound "glitch(7, 16, 9)" #n "0 2 1 3 5 3 2 1",
  sound "cp [cp cp*2] ~" #n "0 1 2 3 4 5",
  s "super808*2"
]

d2 silence

d1 silence

d1 $ slow 2 $ shuffle 12 $ chop 16 $ sound "supersaw"

d1
  $slow 1
  $sometimesBy 0.6 (jux (0.25 ~>))
  $sound "808bd 808cp [~ 808hh] 808oh*2"
  #n "{0 1 2 3 4 5 6}%4"
  #shape "0.5"
  #gain "1.0"


hush
