hush

d1
  $ s "supersin"
  # note 1
  

do
  -- hush
  resetCycles
  setcps((80/240)*(8/14))
  let edo = 22
  let pat = (listToPat [0..(edo-1)])
  let scl = "majPent"
  let shift = [-1..1]
  let fs = "<1 1 2 1 3 1 0.25 4>/2"
  d1
    $ sometimesBy 0.1 (fast 1.5)
    $ fast fs
    $ note "c3(5, 7)"
    |+ note (scale scl (shuffle edo pat))
    |* note (12/edo)
    |+ note (shuffle 2 (listToPat shift) |* 12)
    |+| note "[0, <5 7 9>/2, <0 3>/3]"
    # s "gam"
    # n (irand 257)
    # legato (range 0.5 4.0 $ rand)
    -- # room "0.8" # size "0.7"
    # gain (range 0.8 1.2 $ rand)
    -- # delay "0.5" # delaytime (5/14) # delayfeedback "0.1" # lock 1  
  d2
    $ sometimesBy 0.1 (fast 1.5)
    $ fast fs
    $ note "c3(4, 14, 5)"
    |+ note (scale scl (shuffle edo pat))
    |* note (12/edo)
    |+ note (shuffle 2 (listToPat shift) |* 12)
    |+| note "[0, <5 7 9>/3, <0 3>/4]"
    # s "gam"
    # n ((irand 257) + (irand 2))
    # legato (range 0.5 4.0 $ rand)
    -- # room "0.8" # size "0.7"
    # gain (range 0.8 1.2 $ rand)
    -- # delay "0.5" # delaytime (8/14) # delayfeedback "0.1" # lock 1
  d3
    $ sometimesBy 0.1 (fast 1.5)
    $ fast fs
    $ note "c3(4, 7, 5)"
    |+ note (scale scl (shuffle edo pat))
    |* note (12/edo)
    |+ note (shuffle 2 (listToPat shift) |* 12)
    |+| note "[0, <5 7 9>/1, <0 3>/2]"
    # s "gam"
    # n ((irand 257) + (irand 4))
    # legato (range 0.5 4.0 $ rand)
    -- # room "0.8" # size "0.7"
    # gain (range 0.8 1.2 $ rand)
    -- # delay "0.5" # delaytime (3/14) # delayfeedback "0.1" # lock 1
  d4
    $ sometimesBy 0.1 (fast 1.5)    
    $ fast fs
    $ note "c3(6, 14, 2)"
    |+ note (scale scl (shuffle edo pat))
    |* note (12/edo)
    |+ note (shuffle 2 (listToPat shift) |* 12)
    |+| note "[0, <5 7 9>/3, <0 3>/2]"
    # s "gam"
    # n ((irand 257) + (irand 4))
    # legato (range 0.5 4.0 $ rand)
    -- # room "0.8" # size "0.7"
    # gain (range 0.8 1.2 $ rand)
    -- # delay "0.5" # delaytime (9/14) # delayfeedback "0.1" # lock 1
  